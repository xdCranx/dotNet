package org.example;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class KnapsackGUI {

    private JTextArea textArea1;
    private JTextField textField1;
    private JTextField textField2;
    private JTextField textField3;
    private JButton generateAndSolveButton;
    private JTextArea textArea2;
    private JPanel Panel1;


    public KnapsackGUI() {
        generateAndSolveButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Validate input fields
                String numberStr = textField1.getText();
                String seedStr = textField2.getText();
                String capacityStr = textField3.getText();

                if (numberStr.isEmpty() || seedStr.isEmpty() || capacityStr.isEmpty()) {
                    JOptionPane.showMessageDialog(Panel1, "All fields must be filled out.", "Input Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                int n, seed, capacity;
                try {
                    n = Integer.parseInt(numberStr);
                    seed = Integer.parseInt(seedStr);
                    capacity = Integer.parseInt(capacityStr);
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(Panel1, "Please enter valid numbers.", "Input Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                if (n <= 0 || seed < 0 || capacity <= 0) {
                    JOptionPane.showMessageDialog(Panel1, "Number of items and capacity must be positive integers, seed must be a non-negative integer.", "Input Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                // Define upperBound and lowerBound
                int upperBound = 10; // Replace with appropriate value
                int lowerBound = 1;   // Replace with appropriate value

                // Create a Problem instance
                Problem problem = new Problem(n, seed, upperBound, lowerBound);

                // Solve the problem
                Result result = problem.Solve(capacity);

                // Display the generated items
                textArea1.setText(problem.toString());

                // Display the solution
                textArea2.setText(result.toString());
            }
        });
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame("KnapsackGUI");
        frame.setContentPane(new KnapsackGUI().Panel1);
        frame.setPreferredSize(new Dimension(400, 300));
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);


    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        Panel1 = new JPanel();
        Panel1.setLayout(new GridBagLayout());
        final JPanel spacer1 = new JPanel();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.gridheight = 7;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        Panel1.add(spacer1, gbc);
        final JLabel label1 = new JLabel();
        label1.setText("Number");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 0.2;
        gbc.anchor = GridBagConstraints.NORTHWEST;
        Panel1.add(label1, gbc);
        textField1 = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 0.2;
        gbc.anchor = GridBagConstraints.NORTHWEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        Panel1.add(textField1, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Seed");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 0.2;
        gbc.anchor = GridBagConstraints.NORTHWEST;
        Panel1.add(label2, gbc);
        textField2 = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 0.2;
        gbc.anchor = GridBagConstraints.NORTHWEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        Panel1.add(textField2, gbc);
        final JLabel label3 = new JLabel();
        label3.setText("Capacity");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.weightx = 1.0;
        gbc.weighty = 0.2;
        gbc.anchor = GridBagConstraints.NORTHWEST;
        Panel1.add(label3, gbc);
        textField3 = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.weightx = 1.0;
        gbc.weighty = 0.2;
        gbc.anchor = GridBagConstraints.NORTH;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        Panel1.add(textField3, gbc);
        generateAndSolveButton = new JButton();
        generateAndSolveButton.setPreferredSize(new Dimension(30, 34));
        generateAndSolveButton.setText("Generate and Solve");
        generateAndSolveButton.setVerticalTextPosition(0);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 6;
        gbc.weightx = 1.0;
        gbc.weighty = 0.2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        Panel1.add(generateAndSolveButton, gbc);
        final JScrollPane scrollPane1 = new JScrollPane();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 7;
        gbc.weightx = 1.0;
        gbc.weighty = 10.0;
        gbc.fill = GridBagConstraints.BOTH;
        Panel1.add(scrollPane1, gbc);
        textArea2 = new JTextArea();
        textArea2.setEditable(false);
        scrollPane1.setViewportView(textArea2);
        final JScrollPane scrollPane2 = new JScrollPane();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.gridheight = 8;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        Panel1.add(scrollPane2, gbc);
        textArea1 = new JTextArea();
        textArea1.setEditable(false);
        scrollPane2.setViewportView(textArea1);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return Panel1;
    }
}
